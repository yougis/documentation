

Il faut dand un premier temps identifier les hexid qui n'ont pas été traité. on peut partir du principe que si un hexid n'est pas dans la table de traitement alors il n'a pas été traité, ce qui n'est pas tout à fait vrai si aucune donnée n'est dans cet hexagone. 


```sql
-- créer une tables des données manquantes

create table surfor.H3_NON_TRAITEE_TMF_TransitionMap_h3_nc_8 as
SELECT t1.hex_id , t1.geometry
FROM bilbo.h3_nc_8  t1
LEFT JOIN surfor."faits_TMF_TransitionMap_h3_nc_8" t2 ON t1.hex_id = t2.hex_id
WHERE t2.hex_id IS NULL;

create table surfor.H3_NON_TRAITEE_TMF_TransitionMap_h3_nc_8_ as
SELECT t1.hex_id , t1.geometry
FROM "surfor"."h3_non_traitee_tmf_transitionmap_h3_nc_8" t1
LEFT JOIN surfor."faits_TMF_TransitionMap_h3_nc_8_non_traite" t2 ON t1.hex_id = t2.hex_id
WHERE t2.hex_id IS NULL;


create table surfor.h3_non_traitee_tmf_degradation_h3_nc_8 as
SELECT t1.hex_id , t1.geometry
FROM bilbo.h3_nc_8  t1
LEFT JOIN surfor."faits_TMF_degradation_h3_nc_8" t2 ON t1.hex_id = t2.hex_id
WHERE t2.hex_id IS NULL;


create table surfor.H3_NON_TRAITEE_nc_6 as
SELECT t1.hex_id, t1.geometry
FROM bilbo.h3_nc_6  t1
LEFT JOIN "surfor"."faits_TMF_annualChangeCollection_h3_nc_6" 
t2 ON t1.hex_id = t2.hex_id
AND t2.id_spatial = '0'
AND t2.annee = 2011
WHERE t2.hex_id IS NULL;


--- créer une table avec annee


create table surfor.H3_NON_TRAITEE_nc_6 as
SELECT t1.hex_id, t1.geometry, 2011 as annee
FROM bilbo.h3_nc_6  t1
LEFT JOIN "surfor"."faits_TMF_annualChangeCollection_h3_nc_6" 
t2 ON t1.hex_id = t2.hex_id
AND t2.id_spatial = '0'
AND t2.annee = 2011
WHERE t2.hex_id IS NULL;


insert into surfor.H3_NON_TRAITEE_nc_6
SELECT t1.hex_id, t1.geometry, 2012 as annee
FROM bilbo.h3_nc_6  t1
LEFT JOIN "surfor"."faits_TMF_annualChangeCollection_h3_nc_6" 
t2 ON t1.hex_id = t2.hex_id
AND t2.id_spatial = '0'
AND t2.annee = 2012
WHERE t2.hex_id IS NULL;



insert into surfor.H3_NON_TRAITEE_nc_6
SELECT t1.hex_id, t1.geometry, 2013 as annee
FROM bilbo.h3_nc_6  t1
LEFT JOIN "surfor"."faits_TMF_annualChangeCollection_h3_nc_6" 
t2 ON t1.hex_id = t2.hex_id
AND t2.id_spatial = '0'
AND t2.annee = 2013
WHERE t2.hex_id IS NULL;



insert into surfor.H3_NON_TRAITEE_nc_6
SELECT t1.hex_id, t1.geometry, 2014 as annee
FROM bilbo.h3_nc_6  t1
LEFT JOIN "surfor"."faits_TMF_annualChangeCollection_h3_nc_6" 
t2 ON t1.hex_id = t2.hex_id
AND t2.id_spatial = '0'
AND t2.annee = 2014
WHERE t2.hex_id IS NULL;



insert into surfor.H3_NON_TRAITEE_nc_6
SELECT t1.hex_id, t1.geometry, 2015 as annee
FROM bilbo.h3_nc_6  t1
LEFT JOIN "surfor"."faits_TMF_annualChangeCollection_h3_nc_6" 
t2 ON t1.hex_id = t2.hex_id
AND t2.id_spatial = '0'
AND t2.annee = 2015
WHERE t2.hex_id IS NULL;


insert into surfor.H3_NON_TRAITEE_nc_6
SELECT t1.hex_id, t1.geometry, 2016 as annee
FROM bilbo.h3_nc_6  t1
LEFT JOIN "surfor"."faits_TMF_annualChangeCollection_h3_nc_6" 
t2 ON t1.hex_id = t2.hex_id
AND t2.id_spatial = '0'
AND t2.annee = 2016
WHERE t2.hex_id IS NULL;


insert into surfor.H3_NON_TRAITEE_nc_6
SELECT t1.hex_id, t1.geometry, 2017 as annee
FROM bilbo.h3_nc_6  t1
LEFT JOIN "surfor"."faits_TMF_annualChangeCollection_h3_nc_6" 
t2 ON t1.hex_id = t2.hex_id
AND t2.id_spatial = '0'
AND t2.annee = 2017
WHERE t2.hex_id IS NULL;


insert into surfor.H3_NON_TRAITEE_nc_6
SELECT t1.hex_id, t1.geometry, 2018 as annee
FROM bilbo.h3_nc_6  t1
LEFT JOIN "surfor"."faits_TMF_annualChangeCollection_h3_nc_6" 
t2 ON t1.hex_id = t2.hex_id
AND t2.id_spatial = '0'
AND t2.annee = 2018
WHERE t2.hex_id IS NULL;




insert into surfor.H3_NON_TRAITEE_nc_6
SELECT t1.hex_id, t1.geometry, 2019 as annee
FROM bilbo.h3_nc_6  t1
LEFT JOIN "surfor"."faits_TMF_annualChangeCollection_h3_nc_6" 
t2 ON t1.hex_id = t2.hex_id
AND t2.id_spatial = '0'
AND t2.annee = 2019
WHERE t2.hex_id IS NULL;


insert into surfor.H3_NON_TRAITEE_nc_6
SELECT t1.hex_id, t1.geometry, 2020 as annee
FROM bilbo.h3_nc_6  t1
LEFT JOIN "surfor"."faits_TMF_annualChangeCollection_h3_nc_6" 
t2 ON t1.hex_id = t2.hex_id
AND t2.id_spatial = '0'
AND t2.annee = 2020
WHERE t2.hex_id IS NULL;


insert into surfor.H3_NON_TRAITEE_nc_6
SELECT t1.hex_id, t1.geometry, 2021 as annee
FROM bilbo.h3_nc_6  t1
LEFT JOIN "surfor"."faits_TMF_annualChangeCollection_h3_nc_6" 
t2 ON t1.hex_id = t2.hex_id
AND t2.id_spatial = '0'
AND t2.annee = 2021
WHERE t2.hex_id IS NULL;

```


A titre d'exemple de hex id n'ayant pas de donnée pour les données TMF (car ilot ou sur la côte) : 

```bash
'869e29a77ffffff','869e2d947ffffff','869f51657ffffff','869f5170fffffff','869f522efffffff','869f5320fffffff','869f53ad7ffffff','869f55477ffffff','869f5560fffffff','869f556f7ffffff','869f55727ffffff','869f55737ffffff','869f55897ffffff','869f55c0fffffff','869f55c57ffffff','869f55c5fffffff','869f55c67ffffff','869f55d4fffffff','869f56387ffffff','869f5639fffffff','869f5a4cfffffff','869f5a4dfffffff','869f5a56fffffff','869f5ad47ffffff','869f5e60fffffff','869f56847ffffff'
```
ces identifiants sont à exclure de la liste des hexagones non traités pour éviter de surcharger les traitements suivants. Ceci n'est pas obligatoire mais permet de gagner du temps. 


Un fois la table des hexagones non traités créée , il faut ajouter une entrer dans le catalogue intake : 

```yaml
sources:
  h3_nc_non_traitee_2013:
    args:
      geopandas_kwargs:
        geom_col: geometry
        crs: 3163
      sql_expr: select hex_id, geometry from "public"."h3_non_traite_acc_2013"
      table: public.h3_non_traite_acc_2013
      uri: postgresql://{{env("DB_USER")}}:{{env("DB_PWD")}}@{{env("DB_HOST")}}:{{env("DB_PORT")}}/oeil_traitement
    description: 'Maille H3 niveau 8 sur les terres emergées de NC'
    driver: intake_geopandas.geopandas.PostGISSource
  h3_nc_non_traitee_2014:
    args:
      geopandas_kwargs:
        geom_col: geometry
        crs: 3163
      sql_expr: select hex_id, geometry from "public"."h3_non_traite_acc_2014"
      table: public.h3_non_traite_acc_2014
      uri: postgresql://{{env("DB_USER")}}:{{env("DB_PWD")}}@{{env("DB_HOST")}}:{{env("DB_PORT")}}/oeil_traitement
    description: 'Maille H3 niveau 8 sur les terres emergées de NC'
    driver: intake_geopandas.geopandas.PostGISSource
```

et ajouter un fichier de spec dans le dossier data_config_file : 

```yaml
adaptingDataframe:
  renameMap: {}
catalogUri: h3.yaml
confDb:
  chunksize: 1000
  strategy: append
  tableName: faits_H3
confDims:
  isin_id_mesure:
  - 3
  isin_id_spatial:
  - None
confRatio:
  indexList:
  - id_spatial
  ratioByIdSpatial:
  - None
  rationalizeBy: values
dataName: h3_nc_non_traitee_2013
epsg: EPSG:3163
indexRef: hex_id
libelle: H3_6_NC_non_traitee_2013
limit: 40
nbchuncks: 40
offset: 0
#to_offset: 680
overlayHow: intersection
version: 1.1
```


Ensuite il faut donner ce fichier en entrée à la fonction de traitement 

```python
list_data_to_calculate  = [
   'h3_non_traite_2013',
    'h3_nc_non_traitee_2014
]
```

