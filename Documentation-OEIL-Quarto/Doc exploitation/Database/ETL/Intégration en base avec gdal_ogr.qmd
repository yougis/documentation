- Choix du schema qui va accueillir la ou les nouvelles tables
- Séléction des tables à importer
- Transformation à effectuer pendant l'import

Utilisation de `PROMOTE_TO_MULTI` pour assurer la compatibilité entre les format de géometrie parfois mixte en entrée, vers un format unique (MULTIPOLYGON par ex)   

Verifier le format en entrée :
- rar -> unrar

- zip -> ok on utilise vsizip 



<b-construction>
Avoir une colonne geom avec un nom identique à chaque table 
</b-construction>

# shape
```
docker run --rm -v //media/commun/Secretariat/Etude/A_Activites:/home osgeo/gdal:ubuntu-full-latest  ogrinfo /home/2021/Dashbord_PPE/DOSSIER/Datasource/2021/PPE_en_cours.shp
```

```
docker run --rm -v //media/commun/Secretariat/Etude/A_Activites:/home osgeo/gdal:ubuntu-full-latest  ogr2ogr -f "PostgreSQL" PG:"host=192.168.1.44 port=5432 user=hroussaffa dbname=data_externe password=mcot" -lco SCHEMA=davar /home/2021/Dashbord_PPE/DOSSIER/Datasource/2021/PPE_en_cours/PPE_en_cours.shp -nlt PROMOTE_TO_MULTI -nlt CONVERT_TO_LINEAR -lco precision=NO
```

```
docker run --rm -v //media/commun/Informatique/SIG/Donnees:/home osgeo/gdal:ubuntu-full-latest  ogr2ogr -f "PostgreSQL" PG:"host=192.168.1.44 port=5432 user=hroussaffa dbname=data_externe password=mcot" -lco SCHEMA=endemia /home/Oeil/zico.shp -nlt PROMOTE_TO_MULTI -nlt CONVERT_TO_LINEAR -lco precision=NO
```


# Archive ZIP 

``` 
docker run --rm -v //media/commun/Informatique/SIG/Donnees:/home osgeo/gdal:ubuntu-full-latest  ogr2ogr -f "PostgreSQL" PG:"host=192.168.1.44 port=5432 user=hroussaffa dbname=data_externe password=mcot" -lco SCHEMA=endemia /vsizip/home/Collectivite/Gouv/DTSI/kba.zip -nlt PROMOTE_TO_MULTI -lco precision=NO  -lco NAME=kba
```

```
docker run --rm -v //media/commun/Informatique/SIG/Donnees:/home osgeo/gdal:ubuntu-full-latest  ogr2ogr -f "PostgreSQL" PG:"host=192.168.1.44 port=5432 user=hroussaffa dbname=data_externe password=mcot" -lco SCHEMA=bdreseau_electrique /vsizip/home/Collectivite/VDN/EPu_24032022.zip/EPu_24032022 -nlt PROMOTE_TO_MULTI -lco precision=NO

``` 

```
docker run --rm -v //media/commun/Informatique/SIG/Donnees:/home osgeo/gdal:ubuntu-full-latest  ogr2ogr -f "PostgreSQL" PG:"host=192.168.1.44 port=5432 user=hroussaffa dbname=data_externe password=mcot" -lco SCHEMA=bdenvironnement /vsizip/home/Organisme_Recherche_et_Autres/CEN/2022/Zone_de_vigilance_des_foretseches.zip/Zone_de_vigilance_des_for%C3%AAts_s%C3%A8ches.shp -nlt PROMOTE_TO_MULTI -lco NAME=forets_seches
```

``` 
docker run --rm -v //media/commun/Informatique/SIG/Donnees:/home osgeo/gdal:ubuntu-full-latest  ogr2ogr -f "PostgreSQL" PG:"host=192.168.1.44 port=5432 user=hroussaffa dbname=data_externe password=mcot" -lco SCHEMA=bdgeol /vsizip/home/
```

```
docker run --rm -v //media/commun/Informatique/SIG/Donnees:/home osgeo/gdal:ubuntu-full-latest  ogr2ogr -f "PostgreSQL" PG:"host=192.168.1.44 port=5432 user=hroussaffa dbname=data_externe password=mcot" -lco SCHEMA=bdgeol /vsizip/home/Collectivite/Gouv/DIMENC/GEOLOGIE_200000.zip/GEOLOGIE_200000/GEOLOGIE_200000.gdb
```
```
docker run --rm -v //media/commun/Informatique/SIG/Donnees:/home osgeo/gdal:ubuntu-full-latest  ogr2ogr -f "PostgreSQL" PG:"host=192.168.1.44 port=5432 user=hroussaffa dbname=data_externe password=mcot" -lco SCHEMA=bdgeol /vsizip/home/Collectivite/Gouv/DIMENC/GEOLOGIE_50000.zip/Geologie_50000.gdb/ EtatMiseAJour
```
```
docker run --rm -v //media/commun/Informatique/SIG/Donnees:/home osgeo/gdal:ubuntu-full-latest  ogr2ogr -f "PostgreSQL" PG:"host=192.168.1.44 port=5432 user=hroussaffa dbname=data_externe password=mcot" -lco SCHEMA=bdgeol /vsizip/home/Collectivite/Gouv/DIMENC/GEOLOGIE_50000.zip/Geologie_50000.gdb/ ContourGeologique_50000_Vbeta -nlt CONVERT_TO_LINEAR
```


```
docker run --rm -v //media/commun/Secretariat/Etude/A_Activites:/home osgeo/gdal:ubuntu-full-latest  ogr2ogr -f "PostgreSQL" PG:"host=192.168.1.44 port=5432 user=hroussaffa dbname=data_externe password=mcot" -lco SCHEMA=davar /vsizip/home/2021/Dashbord_PPE/DOSSIER/Datasource/2021/SYNTHESE_PLUVIO_2011.zip/SYNTHESE_PLUVIO_2011_NR.gdb -nlt CONVERT_TO_LINEAR
```

```
docker run --rm -v //media/commun/Secretariat/Etude/A_Activites:/home osgeo/gdal:ubuntu-full-latest  ogr2ogr -f "PostgreSQL" PG:"host=192.168.1.44 port=5432 user=hroussaffa dbname=data_externe password=mcot" -lco SCHEMA=isee /vsizip/home/2021/Dashbord_PPE/DOSSIER/Datasource/2021/ISEE-RP-2019-20211105T052506Z-001.zip/ISEE-RP-2019/base-ilot-RP-19.gdb -nlt PROMOTE_TO_MULTI 
```

```
docker run --rm -v //media/commun/Secretariat/Etude/A_Activites:/home osgeo/gdal:ubuntu-full-latest  ogr2ogr -f "PostgreSQL" PG:"host=192.168.1.44 port=5432 user=hroussaffa dbname=data_externe password=mcot" -lco SCHEMA=davar /vsizip//home/2021/Dashbord_PPE/DOSSIER/Datasource/2022/V2_PPE.zip -nlt PROMOTE_TO_MULTI -nlt CONVERT_TO_LINEAR -lco precision=NO
```

### Plusieurs niveaux de zipfile
```
docker run --rm -v //media/commun/Secretariat/Etude/A_Activites:/home \
osgeo/gdal:alpine-small-3.2.2 \
ogr2ogr -f "PostgreSQL" PG:"host=192.168.1.44 \
port=5432 \ 
user=hroussaffa \
dbname=oeil_traitement password=mcot" \
-lco SCHEMA=georep \
/vsizip/vsizip/home/2021/I-7-1_Historique_Incendies_Sentinel/2_LIVRABLES/feuxV2_2017_2018.zip/S2_L2A_BurnedAreas_20181202-20181.zip/S2_L2A_BurnedAreas_20181202-20181230/S2_L2A_BurnedAreas_20181202-20181230.shp -nln Sentinel_Surface_Detectee \
-nlt PROMOTE_TO_MULTI 
```

Multiple fichiers dans 2 niveaux d'un zipfile
il vaut mieux extraire le premier niveau puis lancer le script

```
#!/bin/bash

BASE="//media/commun/Secretariat/Etude/A_Activites"
PATHZIP="/2021/I-7-1_Historique_Incendies_Sentinel/2_LIVRABLES/feuxV2_2017_2018"

ls ${BASE}${PATHZIP} >> zipfiles
cat zipfiles | while read zipfile ; 
do 
zipinfo -1 ${BASE}${PATHZIP}/${zipfile} | grep  .*.shp | sed 's/.*/'${zipfile}'\/&/' >> shapefiles
done
cat shapefiles | while read filespath ; 
do 
echo "processig : ${filespath}..."
docker run --rm -v //media/commun/Secretariat/Etude/A_Activites:/home osgeo/gdal:alpine-small-3.2.2 ogr2ogr -update -append -f "PostgreSQL" PG:"host=192.168.1.44 port=5432 user=hroussaffa dbname=oeil_traitement password=mcot" /vsizip/home${PATHZIP}/${filespath} -nln feux.Sentinel_Surface_Detectee -nlt PROMOTE_TO_MULTI

done

rm zipfiles shapefiles 
exit
```


# Gdb
## info sur les couches de la gdb file
```
docker run --rm -v //media/commun/Informatique/SIG/Donnees:/home osgeo/gdal:alpine-small-3.2.2  ogrinfo /home/Oeil/Projet/feux/sentinelV1606/Sentinel_V1606.gdb 
```

```
docker run --rm -v //media/commun/Secretariat/Etude/A_Activites/2020/I-1-2_L12E_Analyse_Impacts_Incendie/00_LIVRABLE/Diffusion:/home osgeo/gdal:ubuntu-full-latest   ogrinfo /home/CaracterisationIncendie2019.gdb 
```
## Lancer l'import de toute la base
```
docker run --rm -v //media/commun/Secretariat/Etude/A_Activites/2020/I-1-2_L12E_Analyse_Impacts_Incendie/00_LIVRABLE/Diffusion:/home osgeo/gdal:ubuntu-full-latest  ogr2ogr -f "PostgreSQL" PG:"host=192.168.1.44 port=5432 user=hroussaffa dbname=oeil_traitement password=mcot" -lco SCHEMA=feux /home/CaracterisationIncendie2019.gdb -nlt PROMOTE_TO_MULTI
```

## Lancer l'import pour une seul couche d'une gdb
```
docker run --rm -v //media/commun/Informatique/SIG/Donnees:/home osgeo/gdal:alpine-small-3.2.2  ogr2ogr -f "PostgreSQL" PG:"host=192.168.1.44 port=5432 user=hroussaffa dbname=oeil_traitement password=mcot" -lco SCHEMA=feux /home/Oeil/Projet/feux/sentinelV1606/Sentinel_V1606.gdb VIIRS_Complet -nlt PROMOTE_TO_MULTI -nln VIIRS
```


--- 

# Troubleshooting

`Geometry to be inserted is of type 3D Multi Surface, whereas the layer geometry type is 3D Multi Polygon`
utiliser cette option
`-nlt CONVERT_TO_CURVE`

idem avec `Geometry to be inserted is of type Multi Surface, whereas the layer geometry type is Multi Polygon.`

utiliser cette option
`-nlt CONVERT_TO_LINEAR`  

Dans le cas ou des curves sont dans une couche multi-line il  faut convertir ces curves en line
 `-nlt CONVERT_TO_LINEAR`

numeric field overflow :
`-lco precision=NO`


