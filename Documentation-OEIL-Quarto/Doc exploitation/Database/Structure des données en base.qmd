# Faciliter la maintenance de l'organisation des données, leurs accès en base de données

## Connection à la base Postgis localisée dans un container Docker 

#### Préparation de l'environnement
Créer un fichier pgpass pour stocker le mot de pass d'un utilisateur admin de l'instance de bases de données qui sera modifiée.

```
nano $HOME/.pgpass
```

Le fichier doit être construit comme ceci 
```sh
host:port:database:user:password
```

appliquer les droits sur ce fichier :
```
chmod 0600 $HOME/.pgpass
```




## Actions sur l'instance postgis

Lancer un script bash depuis le server qui heberge les containers docker avec des paramètres :
- Nom du role qui a les droit d'executer les scripts
- base sur laquelle l'utilisateur se connecte pour jouer le script

Puis de parametres qui dépendent du type d'action :
- nouveau projet : nom du projet
- nouvel utilisateur : [username; roles à attribuer]
 
 ### Nouveau projet
```sh
sh nouveau_projet_to_psql.sh
```
###  Nouvel utilisateur 
```sh
sh nouvel_utilisateur_to_psql.sh
``` 

## Les Templates SQL
Des templates spécifiques sql sont exécutés dans les databases selon le script bash utilisé. Les parametres du script bash sont intégrés dans la requête SQL.

### Ce que fait "Nouveau projet"
Création d'un schema spécifique au projet.
Le proprietaire du schema est toujours oeil_admin.
Pour chaque nouveau schema 2 nouveaux rôles sont créés :
- projet_RO
- projet_RW 
On leur applique les droits de lecture ou d'écriture selon le rôle pour toutes les tables du schéma.
On donne à oeil_admin le rôle projet_RW.
On donne à oeil_user le rôle projet_RO.


### Nouveau user
Un nouvel utilisateur a un password par défaut avec un ou plusieurs rôles initiaux.


