---
title: 'Azure pipeline'
last-modified: 2023-12-03 04:47:06Z
date: 2022-06-07 21:03:57Z
---

# Utilité des pipelines Azure

Les pipelines Azure sont des pipelines de build et de déploiement qui vous permettent de compiler, tester et déployer votre code et vos applications. Elles permettent de créer, tester et déployer des applications depuis le git Azure DevOps, de manière automatique lorsque les sources sont mise à jour taggées ou realesées.


# Création d'une pipeline Azure

Des agents azure sont installés sur les différents serveurs pour exécuter les tâches de build et de déploiement. Ces agents sont des container docker générés à partir du DockerFile dans ./applications/azure_pipeline buildé par le compose des serveurs. les sources sont diponibles dans le repo [Backup](https://dev.azure.com/Oeilnc/Backup).

```yaml
version: '3.3'
services:
    azure_agent:
        image: azure_pipeline_agent
        container_name: azure_pipeline_agent
        build:
            context: ../
            dockerfile: ./applications/azure_devops/Dockerfile
        environment:
            - AZP_URL=https://dev.azure.com/Oeilnc
            - AZP_TOKEN=${AZURE_TOKEN}
            - AZP_AGENT_NAME=linux
            - AZP_POOL=Isengard
            - AZURE_ADMIN_OEIL_PASSWORD=${AZURE_ADMIN_OEIL_PASSWORD}
```

certaine variables sont à définir dans les variables d'environnement du serveur pour permettre le bon fonctionnement de l'agent `AZP_TOKEN` et `AZURE_ADMIN_OEIL_PASSWORD`.

sinon le container ne démarera pas et vous obtiendrez ce genre de message d'erreur  :

```bash
1. Determining matching Azure Pipelines agent...

error: could not determine a matching Azure Pipelines agent

check that account 'https://dev.azure.com/Oeilnc' is correct and the token is valid for that account

```

Suivre les instructions pour créer un token dans cette article :

[article PAT](cr%C3%A9er%20un%20PAT.qmd)


Voir la doc microsoft pour créer un token [ici](https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/agents?view=azure-devops&tabs=browser#authenticate-with-a-personal-access-token).


Puis indiquer le token dans les variables d'environnement du serveur 

```bash
export AZURE_TOKEN=*** 
```

puis recreér le container de l'agent azure afin qu'il ait instancié le nouveau token dans ses variable d'environnement (voir le docker-compose.yml).

```bash

1. Determining matching Azure Pipelines agent...
2. Downloading and extracting Azure Pipelines agent...
3. Configuring Azure Pipelines agent...
  ___                      ______ _            _ _
 / _ \                     | ___ (_)          | (_)
/ /_\ \_____   _ _ __ ___  | |_/ /_ _ __   ___| |_ _ __   ___  ___
|  _  |_  / | | | '__/ _ \ |  __/| | '_ \ / _ \ | | '_ \ / _ \/ __|
| | | |/ /| |_| | | |  __/ | |   | | |_) |  __/ | | | | |  __/\__ \
\_| |_/___|\__,_|_|  \___| \_|   |_| .__/ \___|_|_|_| |_|\___||___/
                                   | |
        agent v3.241.0             |_|          (commit 1a1c1a1)

>> End User License Agreements:

Building sources from a TFVC repository requires accepting the Team Explorer Everywhere End User License Agreement. This step is not required for building sources from Git repositories.

A copy of the Team Explorer Everywhere license agreement can be found at:

  /azp/license.html

>> Connect:

Connecting to server ...

>> Register Agent:

Scanning for tool capabilities.

Connecting to the server.

Successfully added the agent

Testing agent connection.

2024-07-12 00:50:01Z: Settings Saved.

4. Running Azure Pipelines agent...

Scanning for tool capabilities.

Connecting to the server.

2024-07-12 00:50:05Z: Listening for Jobs
```

Les agents d'inscrivent dans un pool d'agent sur Azure DevOps. Il faut que le pool soit créé au préalable sur Azure DevOps.

Une fois l'agent démarré, il s'incrit dans le pool configuré :

![azp capture](../../_resources/AZP.png)



# Créez une pipeline

